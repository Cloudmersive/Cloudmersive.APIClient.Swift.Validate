//
// DomainAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class DomainAPI {
    /**
     Validate a domain name
     
     - parameter domain: (body) Domain name to check, for example \&quot;cloudmersive.com\&quot;.  The input is a string so be sure to enclose it in double-quotes. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func domainCheck(domain: String, completion: @escaping ((_ data: CheckResponse?,_ error: Error?) -> Void)) {
        domainCheckWithRequestBuilder(domain: domain).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Validate a domain name
     - POST /validate/domain/check
     - Check whether a domain name is valid or not.  API performs a live validation by contacting DNS services to validate the existence of the domain name.
     - API Key:
       - type: apiKey Apikey 
       - name: Apikey
     - examples: [{contentType=application/json, example={
  "ValidDomain" : true
}}, {contentType=application/xml, example=<null>
  <ValidDomain>true</ValidDomain>
</null>}]
     - examples: [{contentType=application/json, example={
  "ValidDomain" : true
}}, {contentType=application/xml, example=<null>
  <ValidDomain>true</ValidDomain>
</null>}]
     
     - parameter domain: (body) Domain name to check, for example \&quot;cloudmersive.com\&quot;.  The input is a string so be sure to enclose it in double-quotes. 

     - returns: RequestBuilder<CheckResponse> 
     */
    open class func domainCheckWithRequestBuilder(domain: String) -> RequestBuilder<CheckResponse> {
        let path = "/validate/domain/check"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: domain)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<CheckResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Get WHOIS information for a domain
     
     - parameter domain: (body) Domain name to check, for example \&quot;cloudmersive.com\&quot;.   The input is a string so be sure to enclose it in double-quotes. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func domainPost(domain: String, completion: @escaping ((_ data: WhoisResponse?,_ error: Error?) -> Void)) {
        domainPostWithRequestBuilder(domain: domain).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get WHOIS information for a domain
     - POST /validate/domain/whois
     - Validate whether a domain name exists, and also return the full WHOIS record for that domain name.  WHOIS records include all the registration details of the domain name, such as information about the domain's owners.
     - API Key:
       - type: apiKey Apikey 
       - name: Apikey
     - examples: [{contentType=application/json, example={
  "WhoisServer" : "WhoisServer",
  "CreatedDt" : "2000-01-23T04:56:07.000+00:00",
  "ValidDomain" : true,
  "RawTextRecord" : "RawTextRecord"
}}, {contentType=application/xml, example=<null>
  <ValidDomain>true</ValidDomain>
  <WhoisServer>aeiou</WhoisServer>
  <RawTextRecord>aeiou</RawTextRecord>
  <CreatedDt>2000-01-23T04:56:07.000Z</CreatedDt>
</null>}]
     - examples: [{contentType=application/json, example={
  "WhoisServer" : "WhoisServer",
  "CreatedDt" : "2000-01-23T04:56:07.000+00:00",
  "ValidDomain" : true,
  "RawTextRecord" : "RawTextRecord"
}}, {contentType=application/xml, example=<null>
  <ValidDomain>true</ValidDomain>
  <WhoisServer>aeiou</WhoisServer>
  <RawTextRecord>aeiou</RawTextRecord>
  <CreatedDt>2000-01-23T04:56:07.000Z</CreatedDt>
</null>}]
     
     - parameter domain: (body) Domain name to check, for example \&quot;cloudmersive.com\&quot;.   The input is a string so be sure to enclose it in double-quotes. 

     - returns: RequestBuilder<WhoisResponse> 
     */
    open class func domainPostWithRequestBuilder(domain: String) -> RequestBuilder<WhoisResponse> {
        let path = "/validate/domain/whois"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: domain)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<WhoisResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
