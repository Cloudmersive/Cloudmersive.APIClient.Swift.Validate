//
// FullNameValidationResponse.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Result of a full name validation operation */
public class FullNameValidationResponse: JSONEncodable {
    /** True if the validation operation was successful, false otherwise */
    public var successful: Bool?
    /** Possible values are: ValidFirstName, ValidUnknownFirstName, InvalidSpamInput, InvalidCharacters, InvalidEmpty */
    public var validationResultFirstName: String?
    /** Possible values are: ValidLastName, ValidUnknownLastName, InvalidSpamInput, InvalidCharacters, InvalidEmpty */
    public var validationResultLastName: String?
    /** The person&#39;s title (if supplied), e.g. \&quot;Mr.\&quot; or \&quot;Ms.\&quot; */
    public var title: String?
    /** The first name (given name) */
    public var firstName: String?
    /** The middle name(s); if there are multiple names they will be separated by spaces */
    public var middleName: String?
    /** The last name (surname) */
    public var lastName: String?
    /** Nickname (if supplied) */
    public var nickName: String?
    /** Suffix to the name, e.g. \&quot;Jr.\&quot; or \&quot;Sr.\&quot; */
    public var suffix: String?
    /** The full display name of the name */
    public var displayName: String?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["Successful"] = self.successful
        nillableDictionary["ValidationResult_FirstName"] = self.validationResultFirstName
        nillableDictionary["ValidationResult_LastName"] = self.validationResultLastName
        nillableDictionary["Title"] = self.title
        nillableDictionary["FirstName"] = self.firstName
        nillableDictionary["MiddleName"] = self.middleName
        nillableDictionary["LastName"] = self.lastName
        nillableDictionary["NickName"] = self.nickName
        nillableDictionary["Suffix"] = self.suffix
        nillableDictionary["DisplayName"] = self.displayName
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
